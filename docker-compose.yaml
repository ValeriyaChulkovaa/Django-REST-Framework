services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    user: "postgres"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput && gunicorn conf.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - "8000"
    env_file:
      - .env
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    depends_on:
      - db
      - redis

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    user: "postgres"
    command: >
      sh -c "celery -A conf worker --loglevel=info"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_beat
    user: "postgres"
    command: >
      sh -c "celery -A conf beat --loglevel=info"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis

  db:
    image: postgres:16
    container_name: postgres_db
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis


volumes:
  postgres_data:
  static_volume: